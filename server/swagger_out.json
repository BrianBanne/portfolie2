{
  "swagger": "2.0",
  "info": {
    "version": "1.0.0",
    "title": "My API",
    "description": "Documentation automatically generated by the <b>swagger-autogen</b> module."
  },
  "host": "localhost:8080",
  "basePath": "/api",
  "tags": [
    {
      "name": "User",
      "description": "Endpoints"
    }
  ],
  "schemes": [
    "http",
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/login/google": {
      "get": {
        "tags": [
          "Auth"
        ],
        "description": "Returns a redirect url to google login",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/login/google/callback": {
      "get": {
        "tags": [
          "Auth"
        ],
        "description": "Callback url from google oauth",
        "parameters": [
          {
            "name": "code",
            "in": "query",
            "type": "string"
          }
        ],
        "responses": {
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/login/admin": {
      "post": {
        "tags": [
          "Auth"
        ],
        "description": "Admin login verification",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/products": {
      "get": {
        "tags": [
          "Product"
        ],
        "description": "Returns all products",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/product/{id}": {
      "get": {
        "tags": [
          "Product"
        ],
        "description": "Returns a single product from given id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "put": {
        "tags": [
          "Product"
        ],
        "description": "Updated product from given id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "obj",
            "in": "body",
            "description": "Product object",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Product"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "delete": {
        "tags": [
          "Product"
        ],
        "description": "Deletes product from given id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/product": {
      "post": {
        "tags": [
          "Product"
        ],
        "description": "Creates a new product",
        "parameters": [
          {
            "name": "obj",
            "in": "body",
            "description": "Product object",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Product"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/order/create": {
      "post": {
        "tags": [
          "Order"
        ],
        "description": "Creates a new order from checkout",
        "parameters": [
          {
            "name": "obj",
            "in": "body",
            "description": "Order details",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Order"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created"
          }
        }
      }
    },
    "/orders": {
      "get": {
        "tags": [
          "Order"
        ],
        "description": "Get all orders",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/order/{id}": {
      "get": {
        "tags": [
          "Order"
        ],
        "description": "Get order from id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "put": {
        "tags": [
          "Order"
        ],
        "description": "Update order from admin",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "delete": {
        "tags": [
          "Order"
        ],
        "description": "Delete a order",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/orders/user": {
      "get": {
        "tags": [
          "Order"
        ],
        "description": "Get a users orders",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/update": {
      "put": {
        "tags": [
          "Customer"
        ],
        "description": "Updates user details",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/details": {
      "get": {
        "tags": [
          "Customer"
        ],
        "description": "Returns user details",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    }
  },
  "definitions": {
    "User": {
      "type": "object",
      "properties": {
        "email": {
          "type": "string",
          "example": "mail@example.com"
        },
        "firstName": {
          "type": "string",
          "example": "Jhon"
        },
        "lastName": {
          "type": "string",
          "example": "Doh"
        },
        "UserType": {
          "type": "string",
          "example": "USER"
        }
      }
    },
    "Customer": {
      "type": "object",
      "properties": {
        "email": {
          "type": "string",
          "example": "mail@example.com"
        },
        "firstName": {
          "type": "string",
          "example": "Jhon"
        },
        "lastName": {
          "type": "string",
          "example": "Doh"
        },
        "UserType": {
          "type": "string",
          "example": "USER"
        },
        "address": {
          "type": "string",
          "example": "The Road 123"
        },
        "postcode": {
          "type": "string",
          "example": "1234"
        },
        "city": {
          "type": "string",
          "example": "Paradise City"
        },
        "Orders": {
          "type": "array",
          "example": [
            ""
          ],
          "items": {
            "type": "string"
          }
        }
      }
    },
    "Product": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "example": "Cool t-shirt"
        },
        "price": {
          "type": "number",
          "example": 250
        },
        "lastName": {
          "type": "string",
          "example": "Doh"
        },
        "description": {
          "type": "string",
          "example": "Very very cool thing"
        },
        "shortDescription": {
          "type": "string",
          "example": "Cool thing"
        },
        "imageUrl": {
          "type": "string",
          "example": "www.image.com/cool-shirt"
        },
        "stockQuantity": {
          "type": "number",
          "example": 4
        }
      }
    },
    "Order": {
      "type": "object",
      "properties": {
        "createdAt": {
          "type": "string",
          "example": "2004-12-12"
        },
        "orderStatus": {
          "type": "string",
          "example": "AWAITNG PAYMENT"
        },
        "customer": {
          "type": "string",
          "example": "CustomerRef"
        },
        "total": {
          "type": "number",
          "example": 1250
        },
        "products": {
          "type": "array",
          "example": [
            "products"
          ],
          "items": {
            "type": "string"
          }
        }
      }
    }
  }
}